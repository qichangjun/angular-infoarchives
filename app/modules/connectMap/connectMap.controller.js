// Generated by CoffeeScript 1.9.1
(function() {
  'use strict';
  angular.module("myApp").controller("connectMapController", [
    '$scope', '$log', '$state', 'mdDialogService', '$timeout', '$mdToast', 'hsAuth', 'connectMapService', 'statisticsService', 'serviceWatchService', 'batchService', '$interval', function($scope, $log, $state, mdDialogService, $timeout, $mdToast, hsAuth, connectMapService, statisticsService, serviceWatchService, batchService, $interval) {
      var getOverAll, getSystemInfo, getSystemLists, init, listenEvent, refreshList, vm;
      vm = this;
      refreshList = null;
      vm.detailLists = [];
      $scope.data = {
        name: '',
        type: 'root',
        children: []
      };
      init = function() {
        getSystemLists();
        listenEvent();
        return getOverAll();
      };
      getOverAll = function() {
        return statisticsService.getOverAll().then(function(res) {
          return vm.overAllInfo = res;
        }, function(res) {});
      };
      getSystemLists = function() {
        vm.loading = true;
        return connectMapService.getSystemLists().then(function(res) {
          var _resList, i, j, len, rows;
          _resList = [];
          for (i in res) {
            _resList.push({
              name: i,
              dataBase: res[i]
            });
          }
          vm.systemLength = _resList.length;
          for (i = j = 0, len = _resList.length; j < len; i = ++j) {
            rows = _resList[i];
            $scope.data.children.push({
              name: rows.name,
              type: 'unit',
              dataBase: rows.dataBase
            });
          }
          return angular.forEach($scope.data.children, function(item) {
            return getSystemInfo(item.name);
          });
        }, function(res) {});
      };
      getSystemInfo = function(systemName) {
        return connectMapService.getSystemInfo(systemName).then(function(res) {
          var i, j, len, name, ref, results, rows;
          if (res.extractionMethod === 0) {
            name = '对接方式:ETL数据抽取';
          } else {
            name = '对接方式:AIU写入接口';
          }
          ref = $scope.data.children;
          results = [];
          for (i = j = 0, len = ref.length; j < len; i = ++j) {
            rows = ref[i];
            if (rows.name === systemName) {
              results.push(rows.children = [
                {
                  name: '系统数据库类型:' + rows.dataBase,
                  type: 'item',
                  detailType: 'dataBase',
                  detailInfo: res
                }, {
                  name: '最新更新时间:',
                  type: 'item',
                  detailType: 'updateTime',
                  detailInfo: res
                }, {
                  name: '档数据量:' + res.recordCount + '件,' + res.recordCapacity + 'GB',
                  type: 'item',
                  detailType: 'recordNum',
                  detailInfo: res
                }, {
                  name: '当前JOB:查看',
                  type: 'item',
                  detailType: 'job',
                  detailInfo: res
                }
              ]);
            } else {
              results.push(void 0);
            }
          }
          return results;
        }, function(res) {});
      };
      listenEvent = function() {
        $scope.$on('node:clickItem', function(e, d) {
          return $timeout(function() {
            var _enableShow, i, j, len, ref, rows;
            _enableShow = true;
            ref = vm.detailLists;
            for (i = j = 0, len = ref.length; j < len; i = ++j) {
              rows = ref[i];
              if (rows.name === d.parent.name && rows.type === d.detailType) {
                _enableShow = false;
                break;
              } else {
                _enableShow = true;
              }
            }
            if (_enableShow) {
              vm.detailLists.push({
                x: d.x - 30,
                y: d.y + 720,
                name: d.parent.name,
                type: d.detailType,
                info: d.detailInfo
              });
            }
          });
        });
        return $scope.$on('node:update', function(e, data) {
          return $timeout(function() {
            vm.detailLists = [];
          });
        });
      };
      init();
    }
  ]);

}).call(this);

//# sourceMappingURL=connectMap.controller.js.map

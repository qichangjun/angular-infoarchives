// Generated by CoffeeScript 1.9.1
(function() {
  'use strict';
  angular.module("myApp").controller("infoArchivesController", [
    '$scope', '$log', 'infoArchivesService', '$state', '$timeout', 'loginService', 'mdToastService', '$translate', 'Cookies', '$locale', 'uibDatepickerPopupConfig', '$rootScope', '$location', 'mdDialogService', 'hsAuth', '$interval', 'permissions', function($scope, $log, infoArchivesService, $state, $timeout, loginService, mdToastService, $translate, Cookies, $locale, uibDatepickerPopupConfig, $rootScope, $location, mdDialogService, hsAuth, $interval, permissions) {
      var changeLanguage, changeRoute, downloadErrorDoc, editCurrentUser, getMessageLists, getUserInfo, gotoAdmin, init, loginOut, markMessageStatus, vm;
      vm = this;
      $scope.searchInput = false;
      vm.currentsState = $state.current.name;
      $rootScope.$on('$stateChangeStart', function(evt, next, curr) {
        return vm.currentsState = next.name;
      });
      init = function() {
        var loadRate, locales;
        $scope.$on("$destroy", function() {
          return $interval.cancel(loadRate);
        });
        vm.messageUnReadNum = 0;
        $('#search').bind('keypress', function(e) {
          if (e.keyCode === 13) {
            return window.open(window.hsConfig.searchUrl + vm.keywords);
          }
        });
        locales = {
          zh: {
            "DATETIME_FORMATS": {
              "AMPMS": ["\u4e0a\u5348", "\u4e0b\u5348"],
              "DAY": ["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"],
              "ERANAMES": ["\u516c\u5143\u524d", "\u516c\u5143"],
              "ERAS": ["\u516c\u5143\u524d", "\u516c\u5143"],
              "FIRSTDAYOFWEEK": 6,
              "MONTH": ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"],
              "SHORTDAY": ["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"],
              "SHORTMONTH": ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"],
              "WEEKENDRANGE": [5, 6],
              "fullDate": "y\u5e74M\u6708d\u65e5EEEE",
              "longDate": "y\u5e74M\u6708d\u65e5",
              "medium": "y\u5e74M\u6708d\u65e5 ah:mm:ss",
              "mediumDate": "y\u5e74M\u6708d\u65e5",
              "mediumTime": "ah:mm:ss",
              "short": "yy/M/d ah:mm",
              "shortDate": "yy/M/d",
              "shortTime": "ah:mm"
            },
            "NUMBER_FORMATS": {
              "CURRENCY_SYM": "\u00a5",
              "DECIMAL_SEP": ".",
              "GROUP_SEP": ",",
              "PATTERNS": [
                {
                  "gSize": 3,
                  "lgSize": 3,
                  "maxFrac": 3,
                  "minFrac": 0,
                  "minInt": 1,
                  "negPre": "-",
                  "negSuf": "",
                  "posPre": "",
                  "posSuf": ""
                }, {
                  "gSize": 3,
                  "lgSize": 3,
                  "maxFrac": 2,
                  "minFrac": 2,
                  "minInt": 1,
                  "negPre": "-\u00a4\u00a0",
                  "negSuf": "",
                  "posPre": "\u00a4\u00a0",
                  "posSuf": ""
                }
              ]
            },
            "id": "zh-cn",
            "pluralCat": function(n, opt_precision) {
              return PLURAL_CATEGORY.OTHER;
            }
          }
        };
        angular.copy(locales['zh'], $locale);
        uibDatepickerPopupConfig.currentText = $translate.instant('MODULES_USERMANAGE_TODAY');
        uibDatepickerPopupConfig.clearText = $translate.instant('MODULES_USERMANAGE_CLEAR');
        uibDatepickerPopupConfig.closeText = $translate.instant('MODULES_PROJECTMANAGE_CONFIRM');
        vm.language = Cookies.get('hs_swap_NG_TRANSLATE_LANG_KEY');
        vm.navList = infoArchivesService.getSideBarList();
        $translate.use(vm.language);
        getUserInfo();
        getMessageLists();
        loadRate = $interval(function() {
          return getMessageLists(true);
        }, 10000, 0);
      };
      getMessageLists = function(cover) {
        return infoArchivesService.getMessageLists().then(function(res) {
          var i, j, k, len, len1, ref, ref1, results, results1, rows;
          if (cover) {
            if (vm.messageLists.length !== res.length) {
              vm.messageLists = res;
              ref = vm.messageLists;
              results = [];
              for (i = j = 0, len = ref.length; j < len; i = ++j) {
                rows = ref[i];
                if (rows.status === 0) {
                  results.push(vm.messageUnReadNum++);
                } else {
                  results.push(void 0);
                }
              }
              return results;
            }
          } else {
            vm.messageLists = res;
            ref1 = vm.messageLists;
            results1 = [];
            for (i = k = 0, len1 = ref1.length; k < len1; i = ++k) {
              rows = ref1[i];
              if (rows.status === 0) {
                results1.push(vm.messageUnReadNum++);
              } else {
                results1.push(void 0);
              }
            }
            return results1;
          }
        }, function(res) {});
      };
      getUserInfo = function() {
        vm.userImgSrc = window.hsConfig.adminBaseUrl + '/user/head_photo' + '?accessToken=' + hsAuth.getAccessToken() + '&id=' + hsAuth.getUserId();
        return infoArchivesService.getUserInfo().then(function(res) {
          return vm.editUserForm = res;
        }, function(res) {});
      };
      changeRoute = function(url) {
        return $state.go(url);
      };
      loginOut = function() {
        vm.loading = true;
        return loginService.userLogout().then(function(res) {
          var storage;
          vm.loading = false;
          mdToastService.showToast(res);
          storage = window.localStorage;
          storage.setItem("before_login_url", window.location.href);
          return window.location.href = window.hsConfig.loginUrl;
        }, function(res) {
          mdToastService.showToast(res);
          return vm.loading = false;
        });
      };
      changeLanguage = function() {
        $translate.use(vm.language);
        return $state.go('.', {}, {
          reload: true
        });
      };
      gotoAdmin = function(url) {
        window.open('http://' + window.location.host + '/admin/#!/' + url);
        return true;
      };
      editCurrentUser = function() {
        return mdDialogService.initCustomDialog('editCurrentUserController', 'modules/main/template/mdDialog/editCurrentUser.html?' + window.hsConfig.bust, event, null).then(function(res) {
          if (res) {
            window.location.reload();
          }
        }, function(res) {});
      };
      markMessageStatus = function(message) {
        var ids, item;
        if (message && message.status === 0) {
          ids = [message.id];
        } else if (message && message.status === 1) {
          return;
        } else {
          ids = (function() {
            var j, len, ref, results;
            ref = vm.messageLists;
            results = [];
            for (j = 0, len = ref.length; j < len; j++) {
              item = ref[j];
              results.push(item.id);
            }
            return results;
          })();
        }
        return infoArchivesService.markMessageStatus(ids).then(function(res) {
          var i, j, len, ref, rows;
          if (message) {
            message.status = 1;
            vm.messageUnReadNum--;
          } else {
            ref = vm.messageLists;
            for (i = j = 0, len = ref.length; j < len; i = ++j) {
              rows = ref[i];
              rows.status = 1;
            }
            vm.messageUnReadNum = 0;
          }
        }, function(res) {});
      };
      downloadErrorDoc = function(id) {
        return infoArchivesService.downloadErrorDoc(id).then(function(res) {
          return window.location.href = res.downloadUrl;
        }, function(res) {});
      };
      vm.downloadErrorDoc = downloadErrorDoc;
      vm.markMessageStatus = markMessageStatus;
      vm.editCurrentUser = editCurrentUser;
      vm.gotoAdmin = gotoAdmin;
      vm.changeLanguage = changeLanguage;
      vm.loginOut = loginOut;
      vm.changeRoute = changeRoute;
      init();
    }
  ]).controller('editCurrentUserController', [
    '$scope', '$log', '$stateParams', '$mdDialog', 'infoArchivesService', 'hsAuth', function($scope, $log, $stateParams, $mdDialog, infoArchivesService, hsAuth) {
      var close, init, saveUser, vm;
      vm = this;
      init = function() {
        vm.userImgSrc = window.hsConfig.adminBaseUrl + '/user/head_photo' + '?accessToken=' + hsAuth.getAccessToken() + '&id=' + hsAuth.getUserId();
        return infoArchivesService.getUserInfo().then(function(res) {
          return vm.editUserForm = res;
        }, function(res) {});
      };
      saveUser = function() {
        vm.editUserForm.headPhoto = null;
        if (vm.files[0] && vm.files[0].result) {
          vm.editUserForm.storagePath = [vm.files[0].result.data.storagePath];
        }
        return infoArchivesService.editCurrentUser(vm.editUserForm).then(function(res) {
          return $mdDialog.hide(true);
        }, function(res) {});
      };
      close = function() {
        return $mdDialog.hide();
      };
      vm.close = close;
      vm.saveUser = saveUser;
      init();
    }
  ]);

}).call(this);

//# sourceMappingURL=infoArchives.controller.js.map
